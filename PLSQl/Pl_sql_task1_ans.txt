1.Write a PL/SQL program to arrange the number of two variable in such a way that the small number will store in num_small variable and large number will store in num_large variable.
DECLARE
V_VAR1 NUMBER:=&V_VAR1;
V_VAR2 NUMBER:=&V_VAR2;
V_num_small NUMBER;
V_num_large NUMBER;
BEGIN
IF V_VAR1> V_VAR2 THEN
V_num_large:=V_VAR1;
ELSE
V_num_small:=V_VAR1;
END IF;
DBMS_OUTPUT.PUT_LINE('SMALLEST NUMBER:' || V_num_small);
DBMS_OUTPUT.PUT_LINE('LARGEST NUMBER:' || V_num_large);
END;




2.Write a PL/SQL program to check whether a given character is letter or digit.
DECLARE
V_VAR VARCHAR2(1):='&V_VAR';
BEGIN
IF V_VAR>='0' AND V_VAR<='9' THEN
DBMS_OUTPUT.PUT_LINE('digit');
ELSIF (V_VAR>='a' AND V_VAR<='z') OR (V_VAR>='A' AND V_VAR<='Z') THEN
DBMS_OUTPUT.PUT_LINE('CHARACTER');
ELSE
DBMS_OUTPUT.PUT_LINE('INVALID');
END IF;
END;

3.Write a program in PL/SQL to print the value of a variable inside and outside a loop using LOOP WHEN EXIT statement.
DECLARE
V_NUM NUMBER := &NUM;
BEGIN
LOOP
IF V_NUM >10 THEN
EXIT;
END IF;
DBMS_OUTPUT.PUT_LINE('INNER LOOP: '||V_NUM);
V_NUM :=V_NUM+2;
END LOOP;
DBMS_OUTPUT.PUT_LINE('OUTER LOOP' || V_NUM);
END;

4.Write a PL/SQL program to display which day is a specific date
DECLARE
V_DATE DATE :='&DATE';
BEGIN
DBMS_OUTPUT.PUT_LINE('THE DAY OF ' || V_DATE || 'IS ' || TO_CHAR(V_DATE,'DAY'));
END; 

5.Write a PL/SQL procedure to calculate the incentive on a specific target otherwise a general incentive to be paid using IF-THEN-ELSE.

SQL
-----
CREATE TABLE XX_CHAINSYS_EMP(NAME VARCHAR2(10),PLACE VARCHAR2(10),SALARY NUMBER);
INSERT INTO XX_CHAINSYS_EMP VALUES('&NAME','&PLACE',&SAL);
PL/SQL
-------
DECLARE
    V_SALARY XX_CHAINSYS_EMP.SALARY%TYPE;
BEGIN
    SELECT SALARY 
    INTO V_SALARY
    FROM XX_CHAINSYS_EMP
    WHERE PLACE='CMBT';
    IF V_SALARY > 12000 THEN
    NULL;
    ELSIF V_SALARY > 10000 THEN
    V_SALARY :=V_SALARY + 2000;
    ELSE
    V_SALARY :=V_SALARY + 4000;
    END IF;
    DBMS_OUTPUT.PUT_LINE('THE NEW SALARY IS '||V_SALARY);
END; 

6.Write a PL/SQL block to calculate the incentive of an employee whose ID is 110.
DECLARE
V_SALARY XX_CHAINSYS_EMP.SALARY%TYPE;
BEGIN
SELECT SALARY
INTO V_SALARY 
FROM XX_CHAINSYS_EMP
WHERE EMPID=101;
IF V_SALARY > 12000 THEN
    NULL;
    ELSIF V_SALARY > 10000 THEN
    V_SALARY :=V_SALARY + 2000;
    ELSE
    V_SALARY :=V_SALARY + 4000;
    END IF;
UPDATE XX_CHAINSYS_EMP SET SALARY=V_SALARY WHERE EMPID=101;
END;

SELECT * FROM XX_CHAINSYS_EMP;

7.Write a block to display name, contact no and no of rows from employee table.

DECLARE
V_NAME xx_chainsys_emp.name%TYPE;
V_COUNT NUMBER;
BEGIN
SELECT NAME,(SELECT COUNT(*) "Total" FROM xx_chainsys_emp)
INTO V_NAME,V_COUNT
FROM xx_chainsys_emp
WHERE EMPID=101;
DBMS_OUTPUT.PUT_LINE('NAME IS ' || V_NAME || 'ROW COUNT IS ' || V_COUNT);
END;

8.To develop a procedure named adjust_salary() sample database.
 Weâ€™ll update the salary information of employees in the employees table by 
using SQL UPDATE statement.

CREATE OR REPLACE PROCEDURE adjust_salary
(V_EMPID IN xx_chainsys_emp.empid%TYPE,V_SAL IN xx_chainsys_emp.salary%TYPE) IS
BEGIN
UPDATE xx_chainsys_emp
SET salary=SALARY+V_SAL
WHERE empid=V_EMPID;
END;
SELECT * FROM xx_chainsys_emp;
EXEC ADJUST_SALARY(100,3000);

